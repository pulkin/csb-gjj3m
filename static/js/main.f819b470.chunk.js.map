{"version":3,"sources":["App.js","index.js"],"names":["matvec","v","M","result","i","length","row","terms","j","M_item","v_item","k","push","Cell","classNames","this","props","isLastRole","isFirstRole","className","onChange","value","options","map","React","Component","Board","state","size","parseInt","boardSize","board","emptyVMatrix","handlePlus","bind","handleMinus","r2","mTerms","e","val","target","setState","notifyListeners","handleUpdate","splice","lrow","Array","fill","board_items","onClick","toString","boardItems","preventDefault","supportsPassive","window","addEventListener","Object","defineProperty","get","wheelEvent","document","createElement","wheelOpt","passive","NumberScroll","min","max","isNaN","handleScroll","handleChange","new_val","maybeUpdate","Math","sign","deltaY","removeEventListener","type","onWheel","onMouseEnter","handleEnter","onMouseLeave","handleLeave","MainPanel","undefined","len","handleLenUpdate","num","lhs","rhs","last","tt","reduce","computeTT","label","index","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f819b470.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nfunction matvec(v, M) {\n  let result = [];\n  for (let i = 0; i < M.length; i++) {\n    let row = M[i];\n    let terms = [];\n    for (let j = 0; j < row.length; j++) {\n      let M_item = row[j];\n      let v_item = v[j];\n      if (M_item && v_item) {\n        for (let k = 0; k < v_item.length; k++) {\n          terms.push(M_item + \"Â·\" + v_item[k]);\n        }\n      }\n    }\n    result.push(terms);\n  }\n  return result;\n}\n\nfunction computeTT(board, num) {\n  let lhs = [board[0]];\n  let rhs = board.map((row) => {\n    let last = row[row.length - 1];\n    return last ? [last] : null;\n  });\n  let tt = Array(num).fill(board);\n  tt[0] = rhs;\n  tt[num - 1] = lhs;\n  return tt.reduce(matvec)[0];\n}\n\nclass Cell extends React.Component {\n  render() {\n    let classNames =\n      \"cell cell-dropdown\" +\n      (this.props.isLastRole\n        ? \" cell-role-end\"\n        : this.props.isFirstRole\n        ? \" cell-role-start\"\n        : \"\");\n    return (\n      <select\n        className={classNames}\n        onChange={this.props.onChange}\n        value={this.props.value}\n      >\n        {this.props.options.map((v, i) => {\n          return (\n            <option key={i} value={v}>\n              {v}\n            </option>\n          );\n        })}\n      </select>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      size: parseInt(this.props.boardSize, 10),\n      board: this.emptyVMatrix(this.props.boardSize)\n    };\n    this.handlePlus = this.handlePlus.bind(this);\n    this.handleMinus = this.handleMinus.bind(this);\n  }\n\n  emptyVMatrix(size) {\n    let result = [];\n    for (let i = 0; i < size; i++) {\n      let r2 = [];\n      result.push(r2);\n      for (let j = 0; j < size; j++) {\n        r2.push(\"\");\n      }\n    }\n    result[0][0] = this.props.mTerms[1];\n    result[0][size - 1] = this.props.mTerms[2];\n    result[size - 1][size - 1] = this.props.mTerms[1];\n    return result;\n  }\n\n  handleUpdate(i, j, e) {\n    let val = e.target.value;\n    let board = this.state.board;\n    board[i][j] = val === \"0\" ? null : val;\n    this.setState({\n      board: board\n    });\n    this.notifyListeners(board);\n  }\n\n  notifyListeners(board) {\n    if (this.props.handleUpdate) {\n      this.props.handleUpdate(board);\n    }\n  }\n\n  componentDidMount() {\n    this.notifyListeners(this.state.board);\n  }\n\n  handlePlus() {\n    let size = this.state.size + 1;\n    let board = this.state.board.map((row) => {\n      row.splice(-1, 0, \"\");\n      return row;\n    });\n    let lrow = Array(size);\n    lrow.fill(\"\");\n    board.splice(-1, 0, lrow);\n    this.setState({\n      size: size,\n      board: board\n    });\n    this.notifyListeners(board);\n  }\n\n  handleMinus() {\n    let size = this.state.size - 1;\n    if (size > 0) {\n      let board = this.state.board.map((row) => {\n        row.splice(-2, 1);\n        return row;\n      });\n      board.splice(-2, 1);\n      this.setState({\n        size: size,\n        board: board\n      });\n      this.notifyListeners(board);\n    }\n  }\n\n  render() {\n    let board_items = [];\n    let size = this.state.size;\n    for (let i = 0; i < size; i++) {\n      if (i === 0) {\n        board_items.push(\n          <div className=\"cell cell-special\" onClick={this.handlePlus} key=\"+\">\n            +\n          </div>\n        );\n      } else if (i === 1) {\n        board_items.push(\n          <div className=\"cell cell-special\" onClick={this.handleMinus} key=\"-\">\n            -\n          </div>\n        );\n      } else {\n        board_items.push(\n          <div\n            className=\"cell cell-placeholder\"\n            key={\"placeholder\" + i.toString()}\n          />\n        );\n      }\n      for (let j = 0; j < size; j++) {\n        board_items.push(\n          <Cell\n            key={\"c\" + (i * size + j).toString()}\n            onChange={this.handleUpdate.bind(this, j, i)}\n            value={this.state.board[j][i]}\n            isLastRole={i === size - 1}\n            isFirstRole={j === 0}\n            options={this.props.mTerms}\n          />\n        );\n      }\n      board_items.push(<div key={\"eol\" + i.toString()} className=\"clear\" />);\n    }\n    this.boardItems = board_items;\n    return <div className=\"board\">{board_items}</div>;\n  }\n}\n\nfunction preventDefault(e) {\n  e.preventDefault();\n}\n\nvar supportsPassive = false;\ntry {\n  window.addEventListener(\n    \"test\",\n    null,\n    Object.defineProperty({}, \"passive\", {\n      get: function () {\n        supportsPassive = true;\n      }\n    })\n  );\n} catch (e) {}\n\nvar wheelEvent =\n  \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : \"mousewheel\";\nvar wheelOpt = supportsPassive ? { passive: false } : false;\n\nclass NumberScroll extends React.Component {\n  constructor(props) {\n    super(props);\n    let min = parseInt(props.min, 10);\n    let max = parseInt(props.max, 10);\n    let v = parseInt(props.val, 10);\n    if (isNaN(min)) min = 0;\n    if (isNaN(max)) max = 100;\n    if (isNaN(v)) v = min;\n    this.state = {\n      min: min,\n      max: max,\n      val: v\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  maybeUpdate(new_val) {\n    if (!isNaN(new_val)) {\n      if (this.state.min <= new_val && new_val <= this.state.max) {\n        this.setState({\n          val: new_val\n        });\n        if (this.props.onChange) {\n          this.props.onChange(new_val);\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.onChange) {\n      this.props.onChange(this.state.val);\n    }\n  }\n\n  handleScroll(e) {\n    this.maybeUpdate(this.state.val - Math.sign(e.deltaY));\n  }\n\n  handleChange(e) {\n    this.maybeUpdate(parseInt(e.target.value, 10));\n  }\n\n  handleEnter(e) {\n    window.addEventListener(wheelEvent, preventDefault, wheelOpt);\n  }\n\n  handleLeave(e) {\n    window.removeEventListener(wheelEvent, preventDefault, wheelOpt);\n  }\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        className=\"cell cell-scroll cell-double cell-special\"\n        onWheel={this.handleScroll}\n        onMouseEnter={this.handleEnter}\n        onMouseLeave={this.handleLeave}\n        onChange={this.handleChange}\n        value={this.state.val}\n      />\n    );\n  }\n}\n\nclass MainPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: undefined,\n      len: undefined\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleLenUpdate = this.handleLenUpdate.bind(this);\n  }\n\n  handleUpdate(board) {\n    this.setState({ board: board });\n  }\n\n  handleLenUpdate(len) {\n    this.setState({ len: len });\n  }\n\n  render() {\n    let terms = [];\n    if (this.state.len && this.state.board)\n      terms = computeTT(this.state.board, this.state.len);\n    return (\n      <div>\n        <Board\n          boardSize=\"2\"\n          handleUpdate={this.handleUpdate}\n          mTerms={[\"\", \"1\", \"sx\", \"sy\", \"sz\", \"c+\", \"c-\"]}\n        />\n        <NumberScroll\n          min=\"2\"\n          max=\"99\"\n          onChange={this.handleLenUpdate}\n          label=\"length: \"\n        />\n        <div className=\"clear\" />\n        <div>\n          {terms.map((value, index) => {\n            return (\n              <div key={index} className=\"product-term\">\n                {value}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default function App() {\n  return <MainPanel />;\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}