{"version":3,"sources":["App.js","index.js"],"names":["matvec","v","M","result","i","length","row","terms","j","M_item","v_item","k","push","computeTT","board","num","lhs","rhs","map","last","tt","Array","fill","reduce","Cell","classNames","this","props","isLastRole","isFirstRole","className","onChange","value","React","Component","Board","state","size","parseInt","boardSize","emptyVMatrix","handlePlus","bind","handleMinus","r2","e","val","target","setState","notifyListeners","handleUpdate","splice","lrow","board_items","onClick","toString","boardItems","preventDefault","supportsPassive","window","addEventListener","Object","defineProperty","get","wheelEvent","document","createElement","wheelOpt","passive","NumberScroll","min","max","isNaN","handleScroll","delta","Math","sign","deltaY","new_val","removeEventListener","onWheel","onMouseEnter","handleEnter","onMouseLeave","handleLeave","tabIndex","label","type","MainPanel","undefined","len","handleLenUpdate","newState","index","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c5a07245.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nfunction matvec(v, M) {\n  let result = [];\n  for (let i = 0; i < M.length; i++) {\n    let row = M[i];\n    let terms = [];\n    for (let j = 0; j < row.length; j++) {\n      let M_item = row[j];\n      let v_item = v[j];\n      if (M_item && v_item) {\n        for (let k = 0; k < v_item.length; k++) {\n          terms.push(M_item + \"Â·\" + v_item[k]);\n        }\n      }\n    }\n    result.push(terms);\n  }\n  return result;\n}\n\nfunction computeTT(board, num) {\n  let lhs = [board[0]];\n  let rhs = board.map((row) => {\n    let last = row[row.length - 1];\n    return last ? [last] : null;\n  });\n  let tt = Array(num).fill(board);\n  tt[0] = rhs;\n  tt[num - 1] = lhs;\n  return tt.reduce(matvec)[0];\n}\n\nclass Cell extends React.Component {\n  render() {\n    let classNames =\n      \"cell cell-dropdown\" +\n      (this.props.isLastRole\n        ? \" cell-role-end\"\n        : this.props.isFirstRole\n        ? \" cell-role-start\"\n        : \"\");\n    return (\n      <select\n        className={classNames}\n        onChange={this.props.onChange}\n        value={this.props.value}\n      >\n        <option value=\"\"></option>\n        <option value=\"1\">1</option>\n        <option value=\"sx\">sx</option>\n        <option value=\"sy\">sy</option>\n        <option value=\"sz\">sz</option>\n        <option value=\"c+\">c+</option>\n        <option value=\"c-\">c-</option>\n      </select>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      size: parseInt(this.props.boardSize, 10),\n      board: this.emptyVMatrix(this.props.boardSize)\n    };\n    this.handlePlus = this.handlePlus.bind(this);\n    this.handleMinus = this.handleMinus.bind(this);\n  }\n\n  emptyVMatrix(size) {\n    let result = [];\n    for (let i = 0; i < size; i++) {\n      let r2 = [];\n      result.push(r2);\n      for (let j = 0; j < size; j++) {\n        r2.push(\"\");\n      }\n    }\n    return result;\n  }\n\n  handleUpdate(i, j, e) {\n    let val = e.target.value;\n    let board = this.state.board;\n    board[i][j] = val === \"0\" ? null : val;\n    this.setState({\n      board: board\n    });\n    this.notifyListeners(board);\n  }\n\n  notifyListeners(board) {\n    if (this.props.handleUpdate) {\n      this.props.handleUpdate(board);\n    }\n  }\n\n  handlePlus() {\n    let size = this.state.size + 1;\n    let board = this.state.board.map((row) => {\n      row.splice(-1, 0, \"\");\n      return row;\n    });\n    let lrow = Array(size);\n    lrow.fill(\"\");\n    board.splice(-1, 0, lrow);\n    this.setState({\n      size: size,\n      board: board\n    });\n    this.notifyListeners(board);\n  }\n\n  handleMinus() {\n    let size = this.state.size - 1;\n    if (size > 0) {\n      let board = this.state.board.map((row) => {\n        row.splice(-2, 1);\n        return row;\n      });\n      board.splice(-2, 1);\n      this.setState({\n        size: size,\n        board: board\n      });\n      this.notifyListeners(board);\n    }\n  }\n\n  render() {\n    let board_items = [];\n    let size = this.state.size;\n    for (let i = 0; i < size; i++) {\n      if (i === 0) {\n        board_items.push(\n          <div className=\"cell cell-special\" onClick={this.handlePlus} key=\"+\">\n            +\n          </div>\n        );\n      } else if (i === 1) {\n        board_items.push(\n          <div className=\"cell cell-special\" onClick={this.handleMinus} key=\"-\">\n            -\n          </div>\n        );\n      } else {\n        board_items.push(<div className=\"cell cell-placeholder\" />);\n      }\n      for (let j = 0; j < size; j++) {\n        board_items.push(\n          <Cell\n            key={\"c\" + (i * size + j).toString()}\n            onChange={this.handleUpdate.bind(this, i, j)}\n            value={this.state.board[i][j]}\n            isLastRole={j === size - 1}\n            isFirstRole={i === 0}\n          />\n        );\n      }\n      board_items.push(<div key={\"eol\" + i.toString()} className=\"clear\" />);\n    }\n    this.boardItems = board_items;\n    return <div className=\"board\">{board_items}</div>;\n  }\n}\n\nfunction preventDefault(e) {\n  e.preventDefault();\n}\n\nvar supportsPassive = false;\ntry {\n  window.addEventListener(\n    \"test\",\n    null,\n    Object.defineProperty({}, \"passive\", {\n      get: function () {\n        supportsPassive = true;\n      }\n    })\n  );\n} catch (e) {}\n\nvar wheelEvent =\n  \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : \"mousewheel\";\nvar wheelOpt = supportsPassive ? { passive: false } : false;\n\nclass NumberScroll extends React.Component {\n  constructor(props) {\n    super(props);\n    let min = parseInt(props.min, 10);\n    let max = parseInt(props.max, 10);\n    let v = parseInt(props.val, 10);\n    if (isNaN(min)) min = 0;\n    if (isNaN(max)) max = 100;\n    if (isNaN(v)) v = min;\n    this.state = {\n      min: min,\n      max: max,\n      val: v\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  handleScroll(e) {\n    let delta = -Math.sign(e.deltaY);\n    if (!isNaN(delta)) {\n      let new_val = this.state.val + delta;\n      if (this.state.min <= new_val && new_val <= this.state.max) {\n        this.setState({\n          val: new_val\n        });\n        if (this.props.onChange) {\n          this.props.onChange(new_val);\n        }\n      }\n    }\n  }\n\n  handleEnter(e) {\n    window.addEventListener(wheelEvent, preventDefault, wheelOpt);\n  }\n\n  handleLeave(e) {\n    window.removeEventListener(wheelEvent, preventDefault, wheelOpt);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"cell cell-scroll cell-double cell-special\"\n        onWheel={this.handleScroll}\n        onMouseEnter={this.handleEnter}\n        onMouseLeave={this.handleLeave}\n        tabIndex=\"0\"\n      >\n        <div>\n          {this.props.label}\n          {this.state.val}\n        </div>\n        <input type=\"text\" value={this.state.val}/>\n      </div>\n    );\n  }\n}\n\nclass MainPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      terms: [],\n      board: undefined,\n      len: undefined\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleLenUpdate = this.handleLenUpdate.bind(this);\n  }\n\n  handleUpdate(board) {\n    let newState = { board: board };\n    if (this.state.len) newState[\"terms\"] = computeTT(board, this.state.len);\n    this.setState(newState);\n  }\n\n  handleLenUpdate(len) {\n    let newState = { len: len };\n    if (this.state.board) newState[\"terms\"] = computeTT(this.state.board, len);\n    this.setState(newState);\n  }\n\n  render() {\n    return (\n      <div>\n        <Board boardSize=\"2\" handleUpdate={this.handleUpdate} />\n        <NumberScroll\n          min=\"2\"\n          max=\"99\"\n          onChange={this.handleLenUpdate}\n          label=\"length: \"\n        />\n        <div className=\"clear\" />\n        <div>\n          {this.state.terms.map((value, index) => {\n            return (\n              <div key={index} className=\"product-term\">\n                {value}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default function App() {\n  return <MainPanel />;\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}